name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Run Prettier and ESLint
        run: yarn run lint

      - name: Run Unit tests
        run: yarn test

      - name: Run E2E tests
        env:
          DB_NAME: mydb
          CLIENT_URL: 'postgresql://postgres:postgres@localhost:5432/mydb'
        run: |
          npx mikro-orm migration:fresh
          yarn test:e2e  --runInBand --detectOpenHandles --forceExit
          
      - name: Build application
        run: yarn run build

      - name: Run migrations on production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DB_NAME: ${{ secrets.PROD_DB_NAME }}
          CLIENT_URL: ${{ secrets.PROD_CLIENT_URL }}
        run: npx mikro-orm migration:up
